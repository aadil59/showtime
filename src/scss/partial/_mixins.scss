//--------------------------------------------------
//All Mixin
// --------------------------------------------------

//Border Raduis
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
  }
  
  @mixin top-border-radius($radius , $radius) {
    -webkit-border-radius: $radius $radius 0 0;
    -moz-border-radius: $radius $radius 0 0;
    -ms-border-radius: $radius $radius 0 0;
    border-radius: $radius $radius 0 0;
  }
  
  @mixin top-left-border-radius($radius) {
    -webkit-border-top-left-radius: $radius;
    -moz-border-top-left-radius: $radius;
    -ms-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  
  @mixin top-right-border-radius($radius) {
    -webkit-border-top-right-radius: $radius;
    -moz-border-top-right-radius: $radius;
    -ms-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
  }
  
  @mixin bottom-border-radius($radius , $radius) {
    -webkit-border-radius: 0 0 $radius $radius;
    -moz-border-radius: 0 0 $radius $radius;
    -ms-border-radius: 0 0 $radius $radius;
    border-radius: 0 0 $radius $radius;
  }
  
  @mixin bottom-left-border-radius($radius) {
    -webkit-border-bottom-left-radius: $radius;
    -moz-border-bottom-left-radius: $radius;
    -ms-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
  }
  
  @mixin bottom-right-border-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    -moz-border-bottom-right-radius: $radius;
    -ms-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  
  @mixin right-border-radius($radius , $radius) {
    -webkit-border-radius: 0 $radius $radius 0;
    -moz-border-radius: 0 $radius $radius 0;
    -ms-border-radius: 0 $radius $radius 0;
    border-radius: 0 $radius $radius 0;
  }
  @mixin left-border-radius($radius , $radius) {
    -webkit-border-radius: $radius 0 0 $radius;
    -moz-border-radius: $radius 0 0 $radius;
    -ms-border-radius: $radius 0 0 $radius;
    border-radius: $radius 0 0 $radius;
  }
  
  //Animations & Tranisitions
  @mixin animation-reverse{
    -webkit-animation-direction: reverse;
    -moz-animation-direction: reverse;
    -ms-animation-direction: reverse;
    -o-animation-direction: reverse;
    animation-direction: reverse;
  }
  
  @mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
    -ms-transform: translate($x, $y); // IE9 only
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
  }
  
  @mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
  }
  
  @mixin transition($transition) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    -ms-transition: $transition;
    transition:         $transition;
  }
  
  @mixin transition-none($transition) {
    -moz-transition:    $transition !important;
    -o-transition:      $transition !important;
    -webkit-transition: $transition !important;
    transition:         $transition !important;
  }
  @mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
  }
  
  @mixin transition-duration($transition) {
    -moz-transition-duration: $transition;
    -o-transition-duration: $transition;
    -webkit-transition-duration: $transition;
    transition-duration: $transition;
  }
  
  //Box Shadow
  @mixin box-shadow($shadow) {
    -webkit-box-shadow: $shadow;
    box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -o-box-shadow: $shadow;
  }
  
  //Box Shadow None
  @mixin box-shadow-none{
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    -ms-box-shadow: none;
    box-shadow: none;
  }
  
  //Text Overflow
  @mixin text-overflow{
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }

  @mixin calc($property, $expression, $important:'') {
    #{$property}: -moz-calc(#{$expression}) unquote($important);
    #{$property}: -webkit-calc(#{$expression}) unquote($important);
    #{$property}: -o-calc(#{$expression}) unquote($important);
    #{$property}: calc(#{$expression}) unquote($important);
   }

   @mixin word-wrap() {
    overflow-wrap: break-word;
    word-wrap: break-word;
    -ms-word-break: break-all;
    word-break: break-word;
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
   }
  // --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
  	  -ms-flex: $values;
  	      flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
     -moz-box-ordinal-group: $val;     
  	     -ms-flex-order: $val;     
  	      -webkit-order: $val;  
  		      order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}
  
  // Tablet Landscape
  @mixin tab-landscape{
    @media screen and (max-width: $tablet-landscape) {
      @content;
    }
  }
  // Tablet Portrait
  @mixin tab-portrait{
    @media screen and (max-width: $tablet-portrait) {
      @content;
    }
  }
  // Mobile Screens
  @mixin mobile-width{
    @media screen and (max-width: $mobile-width) {
      @content;
    }
  }
  @mixin mobile-mini{
    @media screen and (max-width: $mobile-mini) {
      @content;
    }
  }